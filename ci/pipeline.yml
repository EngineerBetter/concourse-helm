---
anchors:
  kubeconfig_params: &kubeconfig_params
    GOOGLE_APPLICATION_CREDENTIALS_CONTENTS: ((gcp_service_account_json))
    KUBECONFIG_CONTENTS: ((kubeconfig))
  trigger-without-download: &trigger-without-download
    trigger: true
    params:
      skip_download: true

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest
- name: helm-chart
  type: registry-image
  source:
    repository: jghiloni/helm-chart-resource
    tag: v0.1.1

resources:
- name: concourse-helm-repo
  type: git
  icon: github
  source:
    uri: git@github.com:EngineerBetter/concourse-helm.git
    private_key: ((github_private_key))

- name: helm-diff-release
  type: github-release
  icon: github
  check_every: 5m
  source:
    owner: databus23
    repository: helm-diff

- name: concourse-helm-chart
  type: helm-chart
  icon: ship-wheel
  source:
    repository_url: https://concourse-charts.storage.googleapis.com
    chart: concourse

# - name: prometheus-operator-helm-chart
#   type: helm-chart
#   icon: ship-wheel
#   source:
#     repository_url: https://kubernetes-charts.storage.googleapis.com
#     chart: prometheus-operator

# - name: grafana-helm-chart
#   type: helm-chart
#   icon: ship-wheel
#   source:
#     repository_url: https://kubernetes-charts.storage.googleapis.com
#     chart: grafana

- name: helm-image
  type: registry-image
  icon: docker
  source:
    repository: alpine/k8s
    tag: 1.17.5

- name: pcf-ops
  type: registry-image
  icon: docker
  source:
    repository: engineerbetter/pcf-ops

jobs:
- name: set-pipeline
  serial: true
  plan:
  - get: concourse-helm-repo
    trigger: true
  - set_pipeline: self
    file: concourse-helm-repo/ci/pipeline.yml
    vars:
      env: ((env))

- name: deploy-concourse
  serial: true
  plan:
  - in_parallel:
    - get: concourse-helm-repo
      trigger: true
      passed:
      - set-pipeline
    - get: concourse-helm-chart
      <<: *trigger-without-download
    - get: helm-image
    - get: helm-diff-release
      params:
        globs:
        - helm-diff-linux.tgz
  - task: concourse-upgrade
    image: helm-image
    file: concourse-helm-repo/ci/tasks/concourse-upgrade/task.yml
    params:
      <<: *kubeconfig_params
      ADMIN_PASSWORD: ((admin_password))
      DEVOPS_PASSWORD: ((devops_password))
      ENV: ((env))
      USER_PASSWORD: ((user_password))
      WEB_LB_IP: ((web_lb_ip))
      WEB_DOMAIN: ((web_domain))
      WEB_TLS_CERT: ((web_tls.certificate))
      WEB_TLS_KEY: ((web_tls.private_key))
      WORKER_KEY: ((worker_key.private_key))
      WORKER_KEY_PUB: ((worker_key.public_key))

# - name: deploy-metrics
#   serial: true
#   plan:
#   - in_parallel:
#     - get: concourse-helm-repo
#       trigger: true
#       passed:
#       - set-pipeline
#     - get: prometheus-operator-helm-chart
#       <<: *trigger-without-download
#     # - get: grafana-helm-chart
#     #   <<: *trigger-without-download
#     - get: helm-image
#     - get: helm-diff-release
#       params:
#         globs:
#         - helm-diff-linux.tgz
#   - task: prometheus-operator-upgrade
#     image: helm-image
#     file: concourse-helm-repo/ci/tasks/prometheus-operator-upgrade/task.yml
#     params:
#       <<: *kubeconfig_params
#       PROMETHEUS_LB_IP: ((grafana_lb_ip))
#   # - task: grafana-upgrade
#   #   image: helm-image
#   #   file: concourse-helm-repo/ci/tasks/grafana-upgrade/task.yml
#   #   params:
#   #     <<: *kubeconfig_params
#   #     GRAFANA_LB_IP: ((grafana_lb_ip))

- name: test-concourse
  serial: true
  plan:
  - in_parallel:
    - get: concourse-helm-repo
      trigger: true
      passed:
      - deploy-concourse
    - get: concourse-helm-chart
      trigger: true
      passed:
      - deploy-concourse
      params:
        skip_download: true
    - get: pcf-ops
  - task: run-test
    image: pcf-ops
    file: concourse-helm-repo/ci/tasks/test/task.yml
    params:
      <<: *kubeconfig_params
      ADMIN_PASSWORD: ((admin_password))
      WEB_DOMAIN: ((web_domain))
